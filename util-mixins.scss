/// Util Mixins for Sass
/// by: Matt Ximenes 
/// Github: https://github.com/MatheusXimenes
/// linkedIn: https://www.linkedin.com/in/matheusximenes/


/// Loop for CSS3 prefixes - type 1
/// @param {any} $property property 
/// @param {any} $value value
@mixin css3($property, $value, $prefixes: (webkit moz ms o)) {
    @each $prefix in $prefixes {
      #{'-' + $prefix + '-' + $property}: $value;
    }
    // Non-prefixed declaration
    #{$property}: $value;
  }

/// Loop for CSS3 prefixes - type 2
/// @param {any} $property property 
/// @param {any} $value value
@mixin other_css3($property, $value, $prefixes: (webkit moz ms o)) {
    @each $prefix in $prefixes {
        #{$property}: #{'-'+$prefix+'-'+$value};
    }
    // Non-prefixed declaration
    #{$property}: $value;
}

/// Select Especific CSS for a especific Brownser
/// @param {any} $browser type of Brownser 
@mixin xbrowser($browsers: Mozilla) {
    @each $browser in $browsers {
      html[data-browser*="#{$browser}"] & {
        @content;
      }
    }
  }

/// Rotation with CSS3
/// @param {deg} $rotation 7deg (default)
/// Require css3 mixin
@mixin rotate($rotation: 7deg){
    @include css3(transform, rotate($rotation));}

/// Rounder Corner with CSS3
/// @param {em} $radius 0.5em (default)
/// Require css3 mixin
@mixin rounded($radius: 0.5em) {
    @include css3(border-radius, $radius);}

/// Gradient in Gerenal
/// @param {color} $from first-color
/// @param {color} $to second-color
/// @param {direction} $direction top (default)
/// Require other_css3 mixin
@mixin gradient($from, $to, $direction: top) {
    background-color: $from;
    @include other_css3(background, linear-gradient($direction, $from, $to));
    filter:  progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$from}', endColorstr='#{$to}');}

/// Opacity
/// @param {color} $color white (default)
/// @param {opacity} $opacity 85% (default)
@mixin background-opacity($color: #fff, $opacity: 0.85) {
    background: $color;
    background: rgba($color, $opacity);}

